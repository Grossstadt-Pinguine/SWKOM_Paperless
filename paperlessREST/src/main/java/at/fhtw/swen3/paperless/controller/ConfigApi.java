/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.2.0-SNAPSHOT).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package at.fhtw.swen3.paperless.controller;

import at.fhtw.swen3.paperless.services.dto.*;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.annotation.Generated;
import jakarta.validation.Valid;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.context.request.NativeWebRequest;

import java.util.Optional;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-11-15T14:45:09.395474Z[Etc/UTC]")
@Validated
@Controller
@Tag(name = "Config", description = "the Config API")
public interface ConfigApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /api/saved_views/
     *
     * @param createSavedViewsRequest  (optional)
     * @return Success (status code 200)
     */
    @Operation(
        operationId = "createSavedViews",
        tags = { "Config" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/saved_views/",
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Void> createSavedViews(
        @Parameter(name = "CreateSavedViewsRequest", description = "") @Valid @RequestBody(required = false) CreateSavedViewsRequest createSavedViewsRequest
    ) {
        return new ResponseEntity<>(HttpStatus.OK);

    }


    /**
     * POST /api/ui_settings/
     *
     * @param createUISettingsRequest  (optional)
     * @return Success (status code 200)
     */
    @Operation(
        operationId = "createUISettings",
        tags = { "Config" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CreateUISettings200Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/ui_settings/",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<CreateUISettings200Response> createUISettings(
        @Parameter(name = "CreateUISettingsRequest", description = "") @Valid @RequestBody(required = false) CreateUISettingsRequest createUISettingsRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"success\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.OK);

    }


    /**
     * GET /ws/status/
     *
     * @return Success (status code 200)
     */
    @Operation(
        operationId = "get",
        tags = { "Config" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/ws/status/"
    )
    
    default ResponseEntity<Void> get(
        
    ) {
        return new ResponseEntity<>(HttpStatus.OK);

    }


    /**
     * GET /api/saved_views/
     *
     * @param page  (optional)
     * @param pageSize  (optional)
     * @return Success (status code 200)
     */
    @Operation(
        operationId = "getSavedViews",
        tags = { "Config" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = GetSavedViews200Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/api/saved_views/",
        produces = { "application/json" }
    )
    
    default ResponseEntity<GetSavedViews200Response> getSavedViews(
        @Parameter(name = "page", description = "", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page", required = false) Integer page,
        @Parameter(name = "page_size", description = "", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page_size", required = false) Integer pageSize
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"next\" : 6, \"all\" : [ 5, 5 ], \"previous\" : 1, \"count\" : 0, \"results\" : [ { \"owner\" : { \"is_superuser\" : true, \"is_active\" : true, \"user_permissions\" : [ 9, 9 ], \"is_staff\" : true, \"last_login\" : \"last_login\", \"last_name\" : \"last_name\", \"groups\" : [ \"\", \"\" ], \"password\" : \"password\", \"id\" : 7, \"date_joined\" : \"date_joined\", \"first_name\" : \"first_name\", \"email\" : \"email\", \"username\" : \"username\" }, \"user_can_change\" : true, \"sort_field\" : \"sort_field\", \"show_on_dashboard\" : true, \"name\" : \"name\", \"show_in_sidebar\" : true, \"filter_rules\" : [ { \"rule_type\" : 2, \"value\" : \"value\" }, { \"rule_type\" : 2, \"value\" : \"value\" } ], \"sort_reverse\" : true, \"id\" : 5 }, { \"owner\" : { \"is_superuser\" : true, \"is_active\" : true, \"user_permissions\" : [ 9, 9 ], \"is_staff\" : true, \"last_login\" : \"last_login\", \"last_name\" : \"last_name\", \"groups\" : [ \"\", \"\" ], \"password\" : \"password\", \"id\" : 7, \"date_joined\" : \"date_joined\", \"first_name\" : \"first_name\", \"email\" : \"email\", \"username\" : \"username\" }, \"user_can_change\" : true, \"sort_field\" : \"sort_field\", \"show_on_dashboard\" : true, \"name\" : \"name\", \"show_in_sidebar\" : true, \"filter_rules\" : [ { \"rule_type\" : 2, \"value\" : \"value\" }, { \"rule_type\" : 2, \"value\" : \"value\" } ], \"sort_reverse\" : true, \"id\" : 5 } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.OK);

    }


    /**
     * GET /api/ui_settings/
     *
     * @return Success (status code 200)
     */
    @Operation(
        operationId = "getUISettings",
        tags = { "Config" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = GetUISettings200Response.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/api/ui_settings/",
        produces = { "application/json" }
    )
    
    default ResponseEntity<GetUISettings200Response> getUISettings(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"settings\" : { \"update_checking\" : { \"backend_setting\" : \"backend_setting\" } }, \"permissions\" : [ \"permissions\", \"permissions\" ], \"display_name\" : \"display_name\", \"user\" : { \"is_superuser\" : true, \"groups\" : [ \"\", \"\" ], \"id\" : 0, \"username\" : \"username\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });

        return new ResponseEntity<>(HttpStatus.OK);
    }

}
